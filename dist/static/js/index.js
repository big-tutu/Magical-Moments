!function(e){var o=window.webpackHotUpdate;window.webpackHotUpdate=function(e,r){!function(e,o){if(!v[e]||!h[e])return;for(var r in h[e]=!1,o)Object.prototype.hasOwnProperty.call(o,r)&&(p[r]=o[r]);0==--b&&0===y&&k()}(e,r),o&&o(e,r)};var r,n=!0,s="ae416db18882df7e6540",t=1e4,i={},l=[],a=[];function d(e){var o=I[e];if(!o)return S;var n=function(n){return o.hot.active?(I[n]?-1===I[n].parents.indexOf(e)&&I[n].parents.push(e):(l=[e],r=n),-1===o.children.indexOf(n)&&o.children.push(n)):(console.warn("[HMR] unexpected require("+n+") from disposed module "+e),l=[]),S(n)},s=function(e){return{configurable:!0,enumerable:!0,get:function(){return S[e]},set:function(o){S[e]=o}}};for(var t in S)Object.prototype.hasOwnProperty.call(S,t)&&"e"!==t&&"t"!==t&&Object.defineProperty(n,t,s(t));return n.e=function(e){return"ready"===u&&m("prepare"),y++,S.e(e).then(o,function(e){throw o(),e});function o(){y--,"prepare"===u&&(_[e]||x(e),0===y&&0===b&&k())}},n.t=function(e,o){return 1&o&&(e=n(e)),S.t(e,-2&o)},n}var c=[],u="idle";function m(e){u=e;for(var o=0;o<c.length;o++)c[o].call(null,e)}var f,p,j,b=0,y=0,_={},h={},v={};function g(e){return+e+""===e?+e:e}function w(e){if("idle"!==u)throw new Error("check() is only allowed in idle status");return n=e,m("check"),function(e){return e=e||1e4,new Promise(function(o,r){if("undefined"==typeof XMLHttpRequest)return r(new Error("No browser support"));try{var n=new XMLHttpRequest,t=S.p+""+s+".hot-update.json";n.open("GET",t,!0),n.timeout=e,n.send(null)}catch(e){return r(e)}n.onreadystatechange=function(){if(4===n.readyState)if(0===n.status)r(new Error("Manifest request to "+t+" timed out."));else if(404===n.status)o();else if(200!==n.status&&304!==n.status)r(new Error("Manifest request to "+t+" failed."));else{try{var e=JSON.parse(n.responseText)}catch(e){return void r(e)}o(e)}}})}(t).then(function(e){if(!e)return m("idle"),null;h={},_={},v=e.c,j=e.h,m("prepare");var o=new Promise(function(e,o){f={resolve:e,reject:o}});p={};return x(2),"prepare"===u&&0===y&&0===b&&k(),o})}function x(e){v[e]?(h[e]=!0,b++,function(e){var o=document.getElementsByTagName("head")[0],r=document.createElement("script");r.charset="utf-8",r.src=S.p+""+e+"."+s+".hot-update.js",o.appendChild(r)}(e)):_[e]=!0}function k(){m("ready");var e=f;if(f=null,e)if(n)Promise.resolve().then(function(){return O(n)}).then(function(o){e.resolve(o)},function(o){e.reject(o)});else{var o=[];for(var r in p)Object.prototype.hasOwnProperty.call(p,r)&&o.push(g(r));e.resolve(o)}}function O(o){if("ready"!==u)throw new Error("apply() is only allowed in ready status");var r,n,t,a,d;function c(e){for(var o=[e],r={},n=o.slice().map(function(e){return{chain:[e],id:e}});n.length>0;){var s=n.pop(),t=s.id,i=s.chain;if((a=I[t])&&!a.hot._selfAccepted){if(a.hot._selfDeclined)return{type:"self-declined",chain:i,moduleId:t};if(a.hot._main)return{type:"unaccepted",chain:i,moduleId:t};for(var l=0;l<a.parents.length;l++){var d=a.parents[l],c=I[d];if(c){if(c.hot._declinedDependencies[t])return{type:"declined",chain:i.concat([d]),moduleId:t,parentId:d};-1===o.indexOf(d)&&(c.hot._acceptedDependencies[t]?(r[d]||(r[d]=[]),f(r[d],[t])):(delete r[d],o.push(d),n.push({chain:i.concat([d]),id:d})))}}}}return{type:"accepted",moduleId:e,outdatedModules:o,outdatedDependencies:r}}function f(e,o){for(var r=0;r<o.length;r++){var n=o[r];-1===e.indexOf(n)&&e.push(n)}}o=o||{};var b={},y=[],_={},h=function(){console.warn("[HMR] unexpected require("+x.moduleId+") to disposed module")};for(var w in p)if(Object.prototype.hasOwnProperty.call(p,w)){var x;d=g(w);var k=!1,O=!1,P=!1,E="";switch((x=p[w]?c(d):{type:"disposed",moduleId:w}).chain&&(E="\nUpdate propagation: "+x.chain.join(" -> ")),x.type){case"self-declined":o.onDeclined&&o.onDeclined(x),o.ignoreDeclined||(k=new Error("Aborted because of self decline: "+x.moduleId+E));break;case"declined":o.onDeclined&&o.onDeclined(x),o.ignoreDeclined||(k=new Error("Aborted because of declined dependency: "+x.moduleId+" in "+x.parentId+E));break;case"unaccepted":o.onUnaccepted&&o.onUnaccepted(x),o.ignoreUnaccepted||(k=new Error("Aborted because "+d+" is not accepted"+E));break;case"accepted":o.onAccepted&&o.onAccepted(x),O=!0;break;case"disposed":o.onDisposed&&o.onDisposed(x),P=!0;break;default:throw new Error("Unexception type "+x.type)}if(k)return m("abort"),Promise.reject(k);if(O)for(d in _[d]=p[d],f(y,x.outdatedModules),x.outdatedDependencies)Object.prototype.hasOwnProperty.call(x.outdatedDependencies,d)&&(b[d]||(b[d]=[]),f(b[d],x.outdatedDependencies[d]));P&&(f(y,[x.moduleId]),_[d]=h)}var C,T=[];for(n=0;n<y.length;n++)d=y[n],I[d]&&I[d].hot._selfAccepted&&T.push({module:d,errorHandler:I[d].hot._selfAccepted});m("dispose"),Object.keys(v).forEach(function(e){!1===v[e]&&function(e){delete installedChunks[e]}(e)});for(var D,M,A=y.slice();A.length>0;)if(d=A.pop(),a=I[d]){var L={},H=a.hot._disposeHandlers;for(t=0;t<H.length;t++)(r=H[t])(L);for(i[d]=L,a.hot.active=!1,delete I[d],delete b[d],t=0;t<a.children.length;t++){var N=I[a.children[t]];N&&((C=N.parents.indexOf(d))>=0&&N.parents.splice(C,1))}}for(d in b)if(Object.prototype.hasOwnProperty.call(b,d)&&(a=I[d]))for(M=b[d],t=0;t<M.length;t++)D=M[t],(C=a.children.indexOf(D))>=0&&a.children.splice(C,1);for(d in m("apply"),s=j,_)Object.prototype.hasOwnProperty.call(_,d)&&(e[d]=_[d]);var U=null;for(d in b)if(Object.prototype.hasOwnProperty.call(b,d)&&(a=I[d])){M=b[d];var F=[];for(n=0;n<M.length;n++)if(D=M[n],r=a.hot._acceptedDependencies[D]){if(-1!==F.indexOf(r))continue;F.push(r)}for(n=0;n<F.length;n++){r=F[n];try{r(M)}catch(e){o.onErrored&&o.onErrored({type:"accept-errored",moduleId:d,dependencyId:M[n],error:e}),o.ignoreErrored||U||(U=e)}}}for(n=0;n<T.length;n++){var z=T[n];d=z.module,l=[d];try{S(d)}catch(e){if("function"==typeof z.errorHandler)try{z.errorHandler(e)}catch(r){o.onErrored&&o.onErrored({type:"self-accept-error-handler-errored",moduleId:d,error:r,originalError:e}),o.ignoreErrored||U||(U=r),U||(U=e)}else o.onErrored&&o.onErrored({type:"self-accept-errored",moduleId:d,error:e}),o.ignoreErrored||U||(U=e)}}return U?(m("fail"),Promise.reject(U)):(m("idle"),new Promise(function(e){e(y)}))}var I={};function S(o){if(I[o])return I[o].exports;var n=I[o]={i:o,l:!1,exports:{},hot:function(e){var o={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:r!==e,active:!0,accept:function(e,r){if(void 0===e)o._selfAccepted=!0;else if("function"==typeof e)o._selfAccepted=e;else if("object"==typeof e)for(var n=0;n<e.length;n++)o._acceptedDependencies[e[n]]=r||function(){};else o._acceptedDependencies[e]=r||function(){}},decline:function(e){if(void 0===e)o._selfDeclined=!0;else if("object"==typeof e)for(var r=0;r<e.length;r++)o._declinedDependencies[e[r]]=!0;else o._declinedDependencies[e]=!0},dispose:function(e){o._disposeHandlers.push(e)},addDisposeHandler:function(e){o._disposeHandlers.push(e)},removeDisposeHandler:function(e){var r=o._disposeHandlers.indexOf(e);r>=0&&o._disposeHandlers.splice(r,1)},check:w,apply:O,status:function(e){if(!e)return u;c.push(e)},addStatusHandler:function(e){c.push(e)},removeStatusHandler:function(e){var o=c.indexOf(e);o>=0&&c.splice(o,1)},data:i[e]};return r=void 0,o}(o),parents:(a=l,l=[],a),children:[]};return e[o].call(n.exports,n,n.exports,d(o)),n.l=!0,n.exports}S.m=e,S.c=I,S.d=function(e,o,r){S.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:r})},S.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},S.t=function(e,o){if(1&o&&(e=S(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(S.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var n in e)S.d(r,n,function(o){return e[o]}.bind(null,n));return r},S.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return S.d(o,"a",o),o},S.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},S.p="",S.h=function(){return s},d("./src/js/index.js")(S.s="./src/js/index.js")}({"./node_modules/@babel/runtime/core-js/object/define-property.js":function(e,o,r){e.exports=r("./node_modules/core-js/library/fn/object/define-property.js")},"./node_modules/@babel/runtime/core-js/object/get-own-property-descriptor.js":function(e,o,r){e.exports=r("./node_modules/core-js/library/fn/object/get-own-property-descriptor.js")},"./node_modules/@babel/runtime/core-js/object/get-own-property-symbols.js":function(e,o,r){e.exports=r("./node_modules/core-js/library/fn/object/get-own-property-symbols.js")},"./node_modules/@babel/runtime/core-js/object/keys.js":function(e,o,r){e.exports=r("./node_modules/core-js/library/fn/object/keys.js")},"./node_modules/@babel/runtime/helpers/classCallCheck.js":function(e,o){e.exports=function(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}},"./node_modules/@babel/runtime/helpers/createClass.js":function(e,o,r){var n=r("./node_modules/@babel/runtime/core-js/object/define-property.js");function s(e,o){for(var r=0;r<o.length;r++){var s=o[r];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),n(e,s.key,s)}}e.exports=function(e,o,r){return o&&s(e.prototype,o),r&&s(e,r),e}},"./node_modules/@babel/runtime/helpers/defineProperty.js":function(e,o,r){var n=r("./node_modules/@babel/runtime/core-js/object/define-property.js");e.exports=function(e,o,r){return o in e?n(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}},"./node_modules/@babel/runtime/helpers/objectSpread.js":function(e,o,r){var n=r("./node_modules/@babel/runtime/core-js/object/get-own-property-descriptor.js"),s=r("./node_modules/@babel/runtime/core-js/object/get-own-property-symbols.js"),t=r("./node_modules/@babel/runtime/core-js/object/keys.js"),i=r("./node_modules/@babel/runtime/helpers/defineProperty.js");e.exports=function(e){for(var o=1;o<arguments.length;o++){var r=null!=arguments[o]?arguments[o]:{},l=t(r);"function"==typeof s&&(l=l.concat(s(r).filter(function(e){return n(r,e).enumerable}))),l.forEach(function(o){i(e,o,r[o])})}return e}},"./node_modules/core-js/library/fn/object/define-property.js":function(e,o,r){r("./node_modules/core-js/library/modules/es6.object.define-property.js");var n=r("./node_modules/core-js/library/modules/_core.js").Object;e.exports=function(e,o,r){return n.defineProperty(e,o,r)}},"./node_modules/core-js/library/fn/object/get-own-property-descriptor.js":function(e,o,r){r("./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js");var n=r("./node_modules/core-js/library/modules/_core.js").Object;e.exports=function(e,o){return n.getOwnPropertyDescriptor(e,o)}},"./node_modules/core-js/library/fn/object/get-own-property-symbols.js":function(e,o,r){r("./node_modules/core-js/library/modules/es6.symbol.js"),e.exports=r("./node_modules/core-js/library/modules/_core.js").Object.getOwnPropertySymbols},"./node_modules/core-js/library/fn/object/keys.js":function(e,o,r){r("./node_modules/core-js/library/modules/es6.object.keys.js"),e.exports=r("./node_modules/core-js/library/modules/_core.js").Object.keys},"./node_modules/core-js/library/modules/_a-function.js":function(e,o){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},"./node_modules/core-js/library/modules/_an-object.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_is-object.js");e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}},"./node_modules/core-js/library/modules/_array-includes.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_to-iobject.js"),s=r("./node_modules/core-js/library/modules/_to-length.js"),t=r("./node_modules/core-js/library/modules/_to-absolute-index.js");e.exports=function(e){return function(o,r,i){var l,a=n(o),d=s(a.length),c=t(i,d);if(e&&r!=r){for(;d>c;)if((l=a[c++])!=l)return!0}else for(;d>c;c++)if((e||c in a)&&a[c]===r)return e||c||0;return!e&&-1}}},"./node_modules/core-js/library/modules/_cof.js":function(e,o){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},"./node_modules/core-js/library/modules/_core.js":function(e,o){var r=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=r)},"./node_modules/core-js/library/modules/_ctx.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_a-function.js");e.exports=function(e,o,r){if(n(e),void 0===o)return e;switch(r){case 1:return function(r){return e.call(o,r)};case 2:return function(r,n){return e.call(o,r,n)};case 3:return function(r,n,s){return e.call(o,r,n,s)}}return function(){return e.apply(o,arguments)}}},"./node_modules/core-js/library/modules/_defined.js":function(e,o){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},"./node_modules/core-js/library/modules/_descriptors.js":function(e,o,r){e.exports=!r("./node_modules/core-js/library/modules/_fails.js")(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},"./node_modules/core-js/library/modules/_dom-create.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_is-object.js"),s=r("./node_modules/core-js/library/modules/_global.js").document,t=n(s)&&n(s.createElement);e.exports=function(e){return t?s.createElement(e):{}}},"./node_modules/core-js/library/modules/_enum-bug-keys.js":function(e,o){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},"./node_modules/core-js/library/modules/_enum-keys.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_object-keys.js"),s=r("./node_modules/core-js/library/modules/_object-gops.js"),t=r("./node_modules/core-js/library/modules/_object-pie.js");e.exports=function(e){var o=n(e),r=s.f;if(r)for(var i,l=r(e),a=t.f,d=0;l.length>d;)a.call(e,i=l[d++])&&o.push(i);return o}},"./node_modules/core-js/library/modules/_export.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_global.js"),s=r("./node_modules/core-js/library/modules/_core.js"),t=r("./node_modules/core-js/library/modules/_ctx.js"),i=r("./node_modules/core-js/library/modules/_hide.js"),l=r("./node_modules/core-js/library/modules/_has.js"),a=function(e,o,r){var d,c,u,m=e&a.F,f=e&a.G,p=e&a.S,j=e&a.P,b=e&a.B,y=e&a.W,_=f?s:s[o]||(s[o]={}),h=_.prototype,v=f?n:p?n[o]:(n[o]||{}).prototype;for(d in f&&(r=o),r)(c=!m&&v&&void 0!==v[d])&&l(_,d)||(u=c?v[d]:r[d],_[d]=f&&"function"!=typeof v[d]?r[d]:b&&c?t(u,n):y&&v[d]==u?function(e){var o=function(o,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(o);case 2:return new e(o,r)}return new e(o,r,n)}return e.apply(this,arguments)};return o.prototype=e.prototype,o}(u):j&&"function"==typeof u?t(Function.call,u):u,j&&((_.virtual||(_.virtual={}))[d]=u,e&a.R&&h&&!h[d]&&i(h,d,u)))};a.F=1,a.G=2,a.S=4,a.P=8,a.B=16,a.W=32,a.U=64,a.R=128,e.exports=a},"./node_modules/core-js/library/modules/_fails.js":function(e,o){e.exports=function(e){try{return!!e()}catch(e){return!0}}},"./node_modules/core-js/library/modules/_global.js":function(e,o){var r=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},"./node_modules/core-js/library/modules/_has.js":function(e,o){var r={}.hasOwnProperty;e.exports=function(e,o){return r.call(e,o)}},"./node_modules/core-js/library/modules/_hide.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_object-dp.js"),s=r("./node_modules/core-js/library/modules/_property-desc.js");e.exports=r("./node_modules/core-js/library/modules/_descriptors.js")?function(e,o,r){return n.f(e,o,s(1,r))}:function(e,o,r){return e[o]=r,e}},"./node_modules/core-js/library/modules/_html.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_global.js").document;e.exports=n&&n.documentElement},"./node_modules/core-js/library/modules/_ie8-dom-define.js":function(e,o,r){e.exports=!r("./node_modules/core-js/library/modules/_descriptors.js")&&!r("./node_modules/core-js/library/modules/_fails.js")(function(){return 7!=Object.defineProperty(r("./node_modules/core-js/library/modules/_dom-create.js")("div"),"a",{get:function(){return 7}}).a})},"./node_modules/core-js/library/modules/_iobject.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_cof.js");e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}},"./node_modules/core-js/library/modules/_is-array.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_cof.js");e.exports=Array.isArray||function(e){return"Array"==n(e)}},"./node_modules/core-js/library/modules/_is-object.js":function(e,o){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},"./node_modules/core-js/library/modules/_library.js":function(e,o){e.exports=!0},"./node_modules/core-js/library/modules/_meta.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_uid.js")("meta"),s=r("./node_modules/core-js/library/modules/_is-object.js"),t=r("./node_modules/core-js/library/modules/_has.js"),i=r("./node_modules/core-js/library/modules/_object-dp.js").f,l=0,a=Object.isExtensible||function(){return!0},d=!r("./node_modules/core-js/library/modules/_fails.js")(function(){return a(Object.preventExtensions({}))}),c=function(e){i(e,n,{value:{i:"O"+ ++l,w:{}}})},u=e.exports={KEY:n,NEED:!1,fastKey:function(e,o){if(!s(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!t(e,n)){if(!a(e))return"F";if(!o)return"E";c(e)}return e[n].i},getWeak:function(e,o){if(!t(e,n)){if(!a(e))return!0;if(!o)return!1;c(e)}return e[n].w},onFreeze:function(e){return d&&u.NEED&&a(e)&&!t(e,n)&&c(e),e}}},"./node_modules/core-js/library/modules/_object-create.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_an-object.js"),s=r("./node_modules/core-js/library/modules/_object-dps.js"),t=r("./node_modules/core-js/library/modules/_enum-bug-keys.js"),i=r("./node_modules/core-js/library/modules/_shared-key.js")("IE_PROTO"),l=function(){},a=function(){var e,o=r("./node_modules/core-js/library/modules/_dom-create.js")("iframe"),n=t.length;for(o.style.display="none",r("./node_modules/core-js/library/modules/_html.js").appendChild(o),o.src="javascript:",(e=o.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),a=e.F;n--;)delete a.prototype[t[n]];return a()};e.exports=Object.create||function(e,o){var r;return null!==e?(l.prototype=n(e),r=new l,l.prototype=null,r[i]=e):r=a(),void 0===o?r:s(r,o)}},"./node_modules/core-js/library/modules/_object-dp.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_an-object.js"),s=r("./node_modules/core-js/library/modules/_ie8-dom-define.js"),t=r("./node_modules/core-js/library/modules/_to-primitive.js"),i=Object.defineProperty;o.f=r("./node_modules/core-js/library/modules/_descriptors.js")?Object.defineProperty:function(e,o,r){if(n(e),o=t(o,!0),n(r),s)try{return i(e,o,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(e[o]=r.value),e}},"./node_modules/core-js/library/modules/_object-dps.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_object-dp.js"),s=r("./node_modules/core-js/library/modules/_an-object.js"),t=r("./node_modules/core-js/library/modules/_object-keys.js");e.exports=r("./node_modules/core-js/library/modules/_descriptors.js")?Object.defineProperties:function(e,o){s(e);for(var r,i=t(o),l=i.length,a=0;l>a;)n.f(e,r=i[a++],o[r]);return e}},"./node_modules/core-js/library/modules/_object-gopd.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_object-pie.js"),s=r("./node_modules/core-js/library/modules/_property-desc.js"),t=r("./node_modules/core-js/library/modules/_to-iobject.js"),i=r("./node_modules/core-js/library/modules/_to-primitive.js"),l=r("./node_modules/core-js/library/modules/_has.js"),a=r("./node_modules/core-js/library/modules/_ie8-dom-define.js"),d=Object.getOwnPropertyDescriptor;o.f=r("./node_modules/core-js/library/modules/_descriptors.js")?d:function(e,o){if(e=t(e),o=i(o,!0),a)try{return d(e,o)}catch(e){}if(l(e,o))return s(!n.f.call(e,o),e[o])}},"./node_modules/core-js/library/modules/_object-gopn-ext.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_to-iobject.js"),s=r("./node_modules/core-js/library/modules/_object-gopn.js").f,t={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return i&&"[object Window]"==t.call(e)?function(e){try{return s(e)}catch(e){return i.slice()}}(e):s(n(e))}},"./node_modules/core-js/library/modules/_object-gopn.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_object-keys-internal.js"),s=r("./node_modules/core-js/library/modules/_enum-bug-keys.js").concat("length","prototype");o.f=Object.getOwnPropertyNames||function(e){return n(e,s)}},"./node_modules/core-js/library/modules/_object-gops.js":function(e,o){o.f=Object.getOwnPropertySymbols},"./node_modules/core-js/library/modules/_object-keys-internal.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_has.js"),s=r("./node_modules/core-js/library/modules/_to-iobject.js"),t=r("./node_modules/core-js/library/modules/_array-includes.js")(!1),i=r("./node_modules/core-js/library/modules/_shared-key.js")("IE_PROTO");e.exports=function(e,o){var r,l=s(e),a=0,d=[];for(r in l)r!=i&&n(l,r)&&d.push(r);for(;o.length>a;)n(l,r=o[a++])&&(~t(d,r)||d.push(r));return d}},"./node_modules/core-js/library/modules/_object-keys.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_object-keys-internal.js"),s=r("./node_modules/core-js/library/modules/_enum-bug-keys.js");e.exports=Object.keys||function(e){return n(e,s)}},"./node_modules/core-js/library/modules/_object-pie.js":function(e,o){o.f={}.propertyIsEnumerable},"./node_modules/core-js/library/modules/_object-sap.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_export.js"),s=r("./node_modules/core-js/library/modules/_core.js"),t=r("./node_modules/core-js/library/modules/_fails.js");e.exports=function(e,o){var r=(s.Object||{})[e]||Object[e],i={};i[e]=o(r),n(n.S+n.F*t(function(){r(1)}),"Object",i)}},"./node_modules/core-js/library/modules/_property-desc.js":function(e,o){e.exports=function(e,o){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:o}}},"./node_modules/core-js/library/modules/_redefine.js":function(e,o,r){e.exports=r("./node_modules/core-js/library/modules/_hide.js")},"./node_modules/core-js/library/modules/_set-to-string-tag.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_object-dp.js").f,s=r("./node_modules/core-js/library/modules/_has.js"),t=r("./node_modules/core-js/library/modules/_wks.js")("toStringTag");e.exports=function(e,o,r){e&&!s(e=r?e:e.prototype,t)&&n(e,t,{configurable:!0,value:o})}},"./node_modules/core-js/library/modules/_shared-key.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_shared.js")("keys"),s=r("./node_modules/core-js/library/modules/_uid.js");e.exports=function(e){return n[e]||(n[e]=s(e))}},"./node_modules/core-js/library/modules/_shared.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_core.js"),s=r("./node_modules/core-js/library/modules/_global.js"),t=s["__core-js_shared__"]||(s["__core-js_shared__"]={});(e.exports=function(e,o){return t[e]||(t[e]=void 0!==o?o:{})})("versions",[]).push({version:n.version,mode:r("./node_modules/core-js/library/modules/_library.js")?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},"./node_modules/core-js/library/modules/_to-absolute-index.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_to-integer.js"),s=Math.max,t=Math.min;e.exports=function(e,o){return(e=n(e))<0?s(e+o,0):t(e,o)}},"./node_modules/core-js/library/modules/_to-integer.js":function(e,o){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},"./node_modules/core-js/library/modules/_to-iobject.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_iobject.js"),s=r("./node_modules/core-js/library/modules/_defined.js");e.exports=function(e){return n(s(e))}},"./node_modules/core-js/library/modules/_to-length.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_to-integer.js"),s=Math.min;e.exports=function(e){return e>0?s(n(e),9007199254740991):0}},"./node_modules/core-js/library/modules/_to-object.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_defined.js");e.exports=function(e){return Object(n(e))}},"./node_modules/core-js/library/modules/_to-primitive.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_is-object.js");e.exports=function(e,o){if(!n(e))return e;var r,s;if(o&&"function"==typeof(r=e.toString)&&!n(s=r.call(e)))return s;if("function"==typeof(r=e.valueOf)&&!n(s=r.call(e)))return s;if(!o&&"function"==typeof(r=e.toString)&&!n(s=r.call(e)))return s;throw TypeError("Can't convert object to primitive value")}},"./node_modules/core-js/library/modules/_uid.js":function(e,o){var r=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++r+n).toString(36))}},"./node_modules/core-js/library/modules/_wks-define.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_global.js"),s=r("./node_modules/core-js/library/modules/_core.js"),t=r("./node_modules/core-js/library/modules/_library.js"),i=r("./node_modules/core-js/library/modules/_wks-ext.js"),l=r("./node_modules/core-js/library/modules/_object-dp.js").f;e.exports=function(e){var o=s.Symbol||(s.Symbol=t?{}:n.Symbol||{});"_"==e.charAt(0)||e in o||l(o,e,{value:i.f(e)})}},"./node_modules/core-js/library/modules/_wks-ext.js":function(e,o,r){o.f=r("./node_modules/core-js/library/modules/_wks.js")},"./node_modules/core-js/library/modules/_wks.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_shared.js")("wks"),s=r("./node_modules/core-js/library/modules/_uid.js"),t=r("./node_modules/core-js/library/modules/_global.js").Symbol,i="function"==typeof t;(e.exports=function(e){return n[e]||(n[e]=i&&t[e]||(i?t:s)("Symbol."+e))}).store=n},"./node_modules/core-js/library/modules/es6.object.define-property.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_export.js");n(n.S+n.F*!r("./node_modules/core-js/library/modules/_descriptors.js"),"Object",{defineProperty:r("./node_modules/core-js/library/modules/_object-dp.js").f})},"./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_to-iobject.js"),s=r("./node_modules/core-js/library/modules/_object-gopd.js").f;r("./node_modules/core-js/library/modules/_object-sap.js")("getOwnPropertyDescriptor",function(){return function(e,o){return s(n(e),o)}})},"./node_modules/core-js/library/modules/es6.object.keys.js":function(e,o,r){var n=r("./node_modules/core-js/library/modules/_to-object.js"),s=r("./node_modules/core-js/library/modules/_object-keys.js");r("./node_modules/core-js/library/modules/_object-sap.js")("keys",function(){return function(e){return s(n(e))}})},"./node_modules/core-js/library/modules/es6.symbol.js":function(e,o,r){"use strict";var n=r("./node_modules/core-js/library/modules/_global.js"),s=r("./node_modules/core-js/library/modules/_has.js"),t=r("./node_modules/core-js/library/modules/_descriptors.js"),i=r("./node_modules/core-js/library/modules/_export.js"),l=r("./node_modules/core-js/library/modules/_redefine.js"),a=r("./node_modules/core-js/library/modules/_meta.js").KEY,d=r("./node_modules/core-js/library/modules/_fails.js"),c=r("./node_modules/core-js/library/modules/_shared.js"),u=r("./node_modules/core-js/library/modules/_set-to-string-tag.js"),m=r("./node_modules/core-js/library/modules/_uid.js"),f=r("./node_modules/core-js/library/modules/_wks.js"),p=r("./node_modules/core-js/library/modules/_wks-ext.js"),j=r("./node_modules/core-js/library/modules/_wks-define.js"),b=r("./node_modules/core-js/library/modules/_enum-keys.js"),y=r("./node_modules/core-js/library/modules/_is-array.js"),_=r("./node_modules/core-js/library/modules/_an-object.js"),h=r("./node_modules/core-js/library/modules/_is-object.js"),v=r("./node_modules/core-js/library/modules/_to-iobject.js"),g=r("./node_modules/core-js/library/modules/_to-primitive.js"),w=r("./node_modules/core-js/library/modules/_property-desc.js"),x=r("./node_modules/core-js/library/modules/_object-create.js"),k=r("./node_modules/core-js/library/modules/_object-gopn-ext.js"),O=r("./node_modules/core-js/library/modules/_object-gopd.js"),I=r("./node_modules/core-js/library/modules/_object-dp.js"),S=r("./node_modules/core-js/library/modules/_object-keys.js"),P=O.f,E=I.f,C=k.f,T=n.Symbol,D=n.JSON,M=D&&D.stringify,A=f("_hidden"),L=f("toPrimitive"),H={}.propertyIsEnumerable,N=c("symbol-registry"),U=c("symbols"),F=c("op-symbols"),z=Object.prototype,R="function"==typeof T,W=n.QObject,q=!W||!W.prototype||!W.prototype.findChild,B=t&&d(function(){return 7!=x(E({},"a",{get:function(){return E(this,"a",{value:7}).a}})).a})?function(e,o,r){var n=P(z,o);n&&delete z[o],E(e,o,r),n&&e!==z&&E(z,o,n)}:E,V=function(e){var o=U[e]=x(T.prototype);return o._k=e,o},J=R&&"symbol"==typeof T.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof T},G=function(e,o,r){return e===z&&G(F,o,r),_(e),o=g(o,!0),_(r),s(U,o)?(r.enumerable?(s(e,A)&&e[A][o]&&(e[A][o]=!1),r=x(r,{enumerable:w(0,!1)})):(s(e,A)||E(e,A,w(1,{})),e[A][o]=!0),B(e,o,r)):E(e,o,r)},K=function(e,o){_(e);for(var r,n=b(o=v(o)),s=0,t=n.length;t>s;)G(e,r=n[s++],o[r]);return e},Q=function(e){var o=H.call(this,e=g(e,!0));return!(this===z&&s(U,e)&&!s(F,e))&&(!(o||!s(this,e)||!s(U,e)||s(this,A)&&this[A][e])||o)},X=function(e,o){if(e=v(e),o=g(o,!0),e!==z||!s(U,o)||s(F,o)){var r=P(e,o);return!r||!s(U,o)||s(e,A)&&e[A][o]||(r.enumerable=!0),r}},Y=function(e){for(var o,r=C(v(e)),n=[],t=0;r.length>t;)s(U,o=r[t++])||o==A||o==a||n.push(o);return n},Z=function(e){for(var o,r=e===z,n=C(r?F:v(e)),t=[],i=0;n.length>i;)!s(U,o=n[i++])||r&&!s(z,o)||t.push(U[o]);return t};R||(l((T=function(){if(this instanceof T)throw TypeError("Symbol is not a constructor!");var e=m(arguments.length>0?arguments[0]:void 0),o=function(r){this===z&&o.call(F,r),s(this,A)&&s(this[A],e)&&(this[A][e]=!1),B(this,e,w(1,r))};return t&&q&&B(z,e,{configurable:!0,set:o}),V(e)}).prototype,"toString",function(){return this._k}),O.f=X,I.f=G,r("./node_modules/core-js/library/modules/_object-gopn.js").f=k.f=Y,r("./node_modules/core-js/library/modules/_object-pie.js").f=Q,r("./node_modules/core-js/library/modules/_object-gops.js").f=Z,t&&!r("./node_modules/core-js/library/modules/_library.js")&&l(z,"propertyIsEnumerable",Q,!0),p.f=function(e){return V(f(e))}),i(i.G+i.W+i.F*!R,{Symbol:T});for(var $="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;$.length>ee;)f($[ee++]);for(var oe=S(f.store),re=0;oe.length>re;)j(oe[re++]);i(i.S+i.F*!R,"Symbol",{for:function(e){return s(N,e+="")?N[e]:N[e]=T(e)},keyFor:function(e){if(!J(e))throw TypeError(e+" is not a symbol!");for(var o in N)if(N[o]===e)return o},useSetter:function(){q=!0},useSimple:function(){q=!1}}),i(i.S+i.F*!R,"Object",{create:function(e,o){return void 0===o?x(e):K(x(e),o)},defineProperty:G,defineProperties:K,getOwnPropertyDescriptor:X,getOwnPropertyNames:Y,getOwnPropertySymbols:Z}),D&&i(i.S+i.F*(!R||d(function(){var e=T();return"[null]"!=M([e])||"{}"!=M({a:e})||"{}"!=M(Object(e))})),"JSON",{stringify:function(e){for(var o,r,n=[e],s=1;arguments.length>s;)n.push(arguments[s++]);if(r=o=n[1],(h(o)||void 0!==e)&&!J(e))return y(o)||(o=function(e,o){if("function"==typeof r&&(o=r.call(this,e,o)),!J(o))return o}),n[1]=o,M.apply(D,n)}}),T.prototype[L]||r("./node_modules/core-js/library/modules/_hide.js")(T.prototype,L,T.prototype.valueOf),u(T,"Symbol"),u(Math,"Math",!0),u(n.JSON,"JSON",!0)},"./src/css/style.scss":function(e,o){},"./src/js/index.js":function(e,o,r){"use strict";r.r(o);var n=r("./node_modules/@babel/runtime/helpers/objectSpread.js"),s=r.n(n),t=r("./node_modules/@babel/runtime/helpers/classCallCheck.js"),i=r.n(t),l=r("./node_modules/@babel/runtime/helpers/createClass.js"),a=r.n(l);r("./src/css/style.scss");!function(e,o){e.canUploadLength=9;var r=function(){function r(){i()(this,r),this.currentList="home",this.uploadType={imgs:""},this.corpId=o(".container").data("corpid"),this.currentImages=[],this.config={},this.loading=!1,this.hasMore=!0,this.isAndroid=navigator.userAgent.indexOf("Android")>-1||navigator.userAgent.indexOf("Adr")>-1,this.currentPage=1,this.api={LIST:"/api/media/list",WX_CONFIG:"/api/getConfig",UPLOAD:"/api/media/upload",MAKE_LOVE:"/api/media/love",BANNER_DATA:"/api/banner/data"},this.init()}return a()(r,[{key:"init",value:function(){var e=this;o.get("/api/getConfig",{corpId:this.corpId,path:window.location.href}).then(function(r){if(0===r.ret){var n=r.data;e.mode=n.mode,e.config=n,o(".page-rules .message .messages-content").html(n.accountDesc||"<p>No description</p>"),e.wxJssdk(),e.main(),e.renderBanner(),e.prefix(),e.waterfallsFlow(),e.previewPic(),e.handleLike(),e.showTip(),e.scrollLoadMore(),e.handleConfirm(),e.uploadPageEvents(),e.getList({page:1,patten:1,count:20},"home")}else e.showTost("网络出现故障")})}},{key:"main",value:function(){var e=this,r=this,n=o(".upload-preview"),s=o(".select-img");o(".btn-upload").on("tap",function(e){e.preventDefault(),"2"!==r.mode?"3"!==r?o("#fileImage").trigger("click"):o("#fileVidoe").trigger("click"):o(".confirm-mask").show().find(".mask-contaner").addClass("show-mask")}),o(".btn-home").on("tap",function(o){o.preventDefault(),window.location.href=window.location.href,e.page("home")}),o(".btn-rank").on("tap",function(o){o.preventDefault(),e.page("rank")}),o(window).on("resize",function(){setInterval(function(){o("#masonry").masonry("reload")},100)}),o("#fileImage").UploadImg({type:"img",showTost:this.showTost,mixsize:3145728,imgType:"image/png,image/jpg,image/jpeg,image/pjpeg,image/gif,image/bmp,image/x-png",onChange:function(e,t,i){n.show(),o(".img-add.img").remove();var l=0;e.forEach(function(o,n){if(o){var t=new FileReader;t.onload=function(){var e=this.result;s.append('<div class="img img'.concat(o.id,'" data-id="').concat(o.id,'">\n                  <span>\n                    <img class="image" src="').concat(e,'" alt="">\n                  </span>\n                  <a class="delete j-delete">+</a>\n                  <i class="iconfont icon-loading style="color: rgba(0, 0, 0, .85)""></i>\n                </div>'))},t.onloadend=function(){s.find(".iconfont").remove(),l++,r.currentImages.length<9&&r.currentImages.push(o),l===e.length&&r.currentImages.length<9&&(l=0,s.append('\n                <div class="img img-add">\n                  <a class="j-delete"><i class="iconfont icon-Addx"></i></a>\n                </div>\n              '))},t.readAsDataURL(o.file)}})}}),o("#fileVidoe").UploadImg({url:this.api.UPLOAD,width:"750",type:"video",showTost:this.showTost,quality:"0.8",corpId:r.corpId,videoSize:52428800,videoType:"video/ogg,video/mp4,video/WebM,video/quicktime,video/x-msvideo",sendBefore:function(){e.showTost("正在上传文件...")},success:function(o){0===o.ret?(e.showTost("上传成功"),setTimeout(function(){e.page("home")},500),e.currentList="home"):e.showTost(o.msg||"上传失败稍后重试")},error:function(e){}})}},{key:"uploadPageEvents",value:function(){var r=this,n=this,s=o(".upload-preview");s.find(".upload-ok").click(function(){var t={url:r.api.UPLOAD,corpId:n.corpId,type:"img",showTost:r.showTost,sendBefore:function(e,r){o("body").append('\n            <div class="is-img-uploading">\n              <i class="iconfont icon-loading" style="color: rgba(0, 0, 0, .85); z-index: 320"></i>\n              <p>图片上传中</p>\n            </div>')},success:function(r,t){n.page("home"),s.hide().find(".select-img").empty(),e.canUploadLength=9,n.currentImages=[],o(".is-img-uploading").remove(),s.hide().find(".select-img").empty()},error:function(e){o(".is-img-uploading").remove(),this.showTost(e.msg||"上传出现错误")}};n.currentImages.forEach(function(e,o){uploadFn(e.file,t,{all:n.currentImages.length,cur:o})})}),s.on("click",function(r){var t=o(r.target);if(t.hasClass("delete")){var i=t.closest(".img"),l=i.data("id");i.remove(),n.currentImages=n.currentImages.filter(function(e){return e.id!==l}),e.canUploadLength=9-n.currentImages.length,0===s.find(".img-add").length&&s.find(".select-img").append('\n              <div class="img img-add">\n                <a class="j-delete"><i class="iconfont icon-Addx"></i></a>\n              </div> \n            ')}else if(t.hasClass("iconfont"))e.canUploadLength=9-n.currentImages.length,o("#fileImage").trigger("click");else if(t.hasClass("image")){var a=t.attr("src"),d=Array.from(s.find(".image")).map(function(e){return o(e).attr("src")});if("undefined"!=typeof wx)return wx.previewImage({current:a,urls:d}),!1}})}},{key:"waterfallsFlow",value:function(){var e=o("#masonry");parseInt(window.screen.width);e.masonry({itemSelector:".item",gutterWidth:0,isResizable:!0})}},{key:"page",value:function(e,r){var n=o("#page-"+e);n.addClass("active").siblings(".page").removeClass("active"),n.find(".preview").html(""),this.getList({page:1,count:"home"===e?20:10,patten:"home"===e?1:2},e,r&&r)}},{key:"showTip",value:function(){var e=o("#page-rules");o(".btn-rules").on("tap",function(o){o.preventDefault(),e.show(),setTimeout(function(){e.addClass("show")},50)}),o(".close").on("tap",function(r){e.removeClass("show").one("webkitTransitionEnd",function(){o(this).hide()})})}},{key:"getList",value:function(e,r,n){var t=this,i=this.api.LIST,l=this,a=s()({},e,{corpId:l.corpId});l.loading=!0,o.get(i,a,function(e){if(l.loading=!1,n&&n(),0===e.ret){var s=e.data.dataList;s.length<20&&(t.hasMore=!1),l.hasMore=20===s.length;var i=s.map(function(e){return 1===e.mediaType?'<div class="item masonry-brick" data-id="'.concat(e.id,'" data-src="').concat(e.path,'" data-love="').concat(0===e.isVoted?1:2,'">\n                <img src="').concat(e.path,'">\n                <div class="pick-info">\n                  <i class="type iconfont icon-tupianx"></i>\n                  <span class="btnLike">\n                    <i class="iconfont ').concat(1===e.isVoted?"icon-dianzanedx":"icon-dianzanx",'"></i>\n                    <b>').concat(e.voteNum,"</b>\n                  </span>\n                </div>\n              </div>"):'<div class="item video masonry-brick" data-id="'.concat(e.id,'" data-love="').concat(0===e.isVoted?1:2,'" data-videoPath="').concat(e.path,'">\n                <img src="').concat(e.videoCover,'">\n                <div class="pick-info">\n                  <i class="type iconfont icon-shipinx"></i>\n                  <span class="btnLike">\n                    <i class="iconfont ').concat(1===e.isVoted?"icon-dianzanedx":"icon-dianzanx",'"></i>\n                    <b>').concat(e.voteNum,"</b>\n                  </span>\n                </div>\n              </div>")}),a=o("#page-".concat(r)).find(".preview");if(o("#page-".concat(r)).find(".preview").append(i.join("")),0===a.find(".item").length){var d=o(window).height(),c=0;c="rank"===r?(d-200)/2:(d-550)/2,a.html('<div class="noResult" style="top: '.concat(c,"px\">\n            <p>Start sharing the splendid moments you've captured right now!</p>\n            </div>"))}setInterval(function(){o("#masonry").masonry("reload")},100)}else l.showTost(e&&e.msg||"网络错误，请稍后重试")})}},{key:"previewPic",value:function(){var e=this;o(".preview").on("tap",':not(".btnLike")',function(r){r.preventDefault();var n=o(r.target);if(!n.hasClass("btnLike")&&!n.parents(".btnLike").length){var s=n.parents(".item");if(s.hasClass("video")){var t=s.attr("data-videoPath");s.attr("videoPath");return e.playVidoeIOS(t,s.data("id")),!1}var i=[];s.parents(".preview").find(".item").map(function(e,r){var n=o(r).attr("data-src");return n&&i.push(n),n});return"undefined"!=typeof wx?(wx.previewImage({current:s.data("src")||s.attr("src"),urls:i}),!1):void 0}})}},{key:"wxJssdk",value:function(){this.api.WX_CONFIG;var e=this.config;/MicroMessenger/i.test(navigator.userAgent)&&o.getScript("https://res.wx.qq.com/open/js/jweixin-1.0.0.js",function(){wx.config({debug:!1,appId:e.appId,timestamp:e.timestamp,nonceStr:e.nonceStr,signature:e.signature,jsApiList:["onMenuShareTimeline","onMenuShareAppMessage","hideMenuItems","previewImage","chooseImage","uploadImage","getLocalImgData","downloadImage"]}),wx.ready(function(){var o={title:e.wxShareTitle,link:e.url,desc:e.wxShareDesc,imgUrl:e.wxSharePic,success:function(){},cancel:function(){}};wx.onMenuShareTimeline(o),wx.onMenuShareAppMessage(o),wx.hideMenuItems({menuList:["menuItem:share:qq","menuItem:share:weiboApp","menuItem:share:facebook","menuItem:share:QZone","menuItem:favorite","menuItem:copyUrl","menuItem:readMode","menuItem:openWithQQBrowser","menuItem:openWithSafari"]})}),wx.error(function(e){})})}},{key:"handleLike",value:function(){var e=this,r=this.api.MAKE_LOVE;o(".preview").on("tap",".btnLike",function(n){var s=o(this).parents(".item"),t=1===s.closest(".page-rank").length;o("#hint");if(!s.hasClass("disabled")){var i=s.data("id"),l=parseInt(s.attr("data-love"));s.addClass("disabled"),o.post(r,{id:i,act:l,corpId:e.corpId},function(o){0===o.ret?(1===l?(s.find(".btnLike b").text(parseInt(s.find("b").text())+1),s.find(".btnLike i").addClass("icon-dianzanedx").removeClass("icon-dianzanx"),s.removeAttr("love"),s.attr("data-love",2),e.showTost("已点赞")):(s.find(".btnLike b").text(parseInt(s.find("b").text())-1),s.find(".btnLike i").removeClass("icon-dianzanedx").addClass("icon-dianzanx"),s.removeAttr("love"),s.attr("data-love",1),e.showTost("已取消点赞")),t&&e.page("rank")):e.showTost(o&&o.msg||"网络错误请稍后重试"),setTimeout(function(){s.removeClass("disabled")},300)},"json")}})}},{key:"playVidoeIOS",value:function(e,r,n){var s=o(".videoContainer");s.find("video").attr("src",e),s.find(".close-icon").show(),s.addClass("active");var t=o(".videoContainer video");o(".scroller");t.on("playing",function(e){s.find(".close-icon").hide(),s.css("opacity",1)}),this.isAndroid?(t[0].play(),t[0].addEventListener("x5videoexitfullscreen",function(){s.find("video").replaceWith('\n          <video \n            id="j-video"\n            class="wrapper"\n            playsinline \n            webkit-playsinline\n            x-webkit-airplay="allow"\n            preload="auto"\n            x5-video-player-type="h5"\n            x5-video-player-fullscreen="true"\n          >\n            你的浏览器不支持H5播放器\n          </video>'),s.removeClass("active"),setInterval(function(){o("#masonry").masonry("reload")},100)})):t[0].addEventListener("webkitendfullscreen",function(){s.removeClass("active"),setInterval(function(){o("#masonry").masonry("reload")},100)}),setTimeout(function(){t[0].play()},500),s.on("tap",function(e){var r=o(e.target);r.hasClass("videoContainer")?(e.preventDefault(),r.find("video")[0].pause(),s.removeClass("active")):(e.preventDefault(),e.target.pause(),s.removeClass("active"))})}},{key:"prefix",value:function(){o(document).ready(function(e){o(window).on("orientationchange",function(e){o("body");if(180!=window.orientation&&0!=window.orientation||o(".turnBox").remove(),90==window.orientation||-90==window.orientation){if(o(".videoContainer").hasClass("active"))return;o("body").append('<aside class="turnBox"><img src="/static/imgs/turn.png" class="turn"><p>请将手机调至竖屏状态，获得最佳浏览体验</p></aside>')}}),o(".container").on("touchmove",function(e){if(o(e.target).parents(".scroller").length||o(e.target).hasClass("scroller")){var r=o(e.target).hasClass("scroller")?o(e.target)[0]:o(e.target).parents(".scroller")[0];r.scrollHeight==r.offsetHeight&&e.preventDefault()}else e.preventDefault()}),o(".scroller").on("scroll",function(e){var r=o(e.target)[0];0==r.scrollTop?r.scrollTop=1:r.scrollTop==r.scrollHeight-r.offsetHeight&&(r.scrollTop=r.scrollTop-1)}).trigger("scroll")})}},{key:"scrollLoadMore",value:function(){var e=this;o("#page-home").on("scroll",function(){var r=o(this),n=parseInt(r.find(".item:last").css("top"))+parseInt(r.find(".item:last").css("height"))-r.scrollTop(),s=e.currentPage;n<1800&&!e.loading&&e.hasMore&&(s+=1,e.currentPage=s,e.getList({page:s,count:20,patten:1},"home"))})}},{key:"showTost",value:function(e){var r=o("#hint");r.text(e).show(),setTimeout(function(){r.addClass("show-toast")},50),setTimeout(function(){r.removeClass("show-toast").one("webkitTransitionEnd",function(){r.hide()})},1400)}},{key:"renderBanner",value:function(){var e=[{imgUrl:this.config.bannerDetail,id:1}].map(function(e){return'<li id="'.concat(e.id,'" class="slider-item openParam" data-param="">\n          <div class="img-wrap">\n              <img class="banner-image" src="').concat(e.imgUrl,'">\n          </div>\n        </li>')});o("#banner").html(""),o("#banner").html('<ul class="slider-list">'.concat(e.join(""),"</ul>")),o("#banner").slider({autoScroll:!0,infinite:!0})}},{key:"handleConfirm",value:function(){var e=o(".confirm-mask"),r=e.find(".mask-contaner");r.on("click","a",function(n){var s=o(n.target);if(s.hasClass("cancel"))return r.removeClass("show-mask"),void e.hide();s.hasClass("video")?(r.removeClass("show-mask"),e.hide(),o("#fileVidoe").trigger("click")):(r.removeClass("show-mask"),e.hide(),o("#fileImage").trigger("click"))})}}]),r}();o(function(){new r})}(window,$)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,