!function(e){var t=window.webpackHotUpdate;window.webpackHotUpdate=function(e,n){!function(e,t){if(!b[e]||!y[e])return;for(var n in y[e]=!1,t)Object.prototype.hasOwnProperty.call(t,n)&&(m[n]=t[n]);0==--h&&0===v&&C()}(e,n),t&&t(e,n)};var n,o=!0,a="03a58fb2fc7b0bbe7191",i=1e4,s={},r=[],c=[];function d(e){var t=D[e];if(!t)return $;var o=function(o){return t.hot.active?(D[o]?-1===D[o].parents.indexOf(e)&&D[o].parents.push(e):(r=[e],n=o),-1===t.children.indexOf(o)&&t.children.push(o)):(console.warn("[HMR] unexpected require("+o+") from disposed module "+e),r=[]),$(o)},a=function(e){return{configurable:!0,enumerable:!0,get:function(){return $[e]},set:function(t){$[e]=t}}};for(var i in $)Object.prototype.hasOwnProperty.call($,i)&&"e"!==i&&"t"!==i&&Object.defineProperty(o,i,a(i));return o.e=function(e){return"ready"===p&&u("prepare"),v++,$.e(e).then(t,function(e){throw t(),e});function t(){v--,"prepare"===p&&(w[e]||j(e),0===v&&0===h&&C())}},o.t=function(e,t){return 1&t&&(e=o(e)),$.t(e,-2&t)},o}var l=[],p="idle";function u(e){p=e;for(var t=0;t<l.length;t++)l[t].call(null,e)}var f,m,g,h=0,v=0,w={},y={},b={};function k(e){return+e+""===e?+e:e}function x(e){if("idle"!==p)throw new Error("check() is only allowed in idle status");return o=e,u("check"),function(e){return e=e||1e4,new Promise(function(t,n){if("undefined"==typeof XMLHttpRequest)return n(new Error("No browser support"));try{var o=new XMLHttpRequest,i=$.p+""+a+".hot-update.json";o.open("GET",i,!0),o.timeout=e,o.send(null)}catch(e){return n(e)}o.onreadystatechange=function(){if(4===o.readyState)if(0===o.status)n(new Error("Manifest request to "+i+" timed out."));else if(404===o.status)t();else if(200!==o.status&&304!==o.status)n(new Error("Manifest request to "+i+" failed."));else{try{var e=JSON.parse(o.responseText)}catch(e){return void n(e)}t(e)}}})}(i).then(function(e){if(!e)return u("idle"),null;y={},w={},b=e.c,g=e.h,u("prepare");var t=new Promise(function(e,t){f={resolve:e,reject:t}});m={};return j(1),"prepare"===p&&0===v&&0===h&&C(),t})}function j(e){b[e]?(y[e]=!0,h++,function(e){var t=document.getElementsByTagName("head")[0],n=document.createElement("script");n.charset="utf-8",n.src=$.p+""+e+"."+a+".hot-update.js",t.appendChild(n)}(e)):w[e]=!0}function C(){u("ready");var e=f;if(f=null,e)if(o)Promise.resolve().then(function(){return I(o)}).then(function(t){e.resolve(t)},function(t){e.reject(t)});else{var t=[];for(var n in m)Object.prototype.hasOwnProperty.call(m,n)&&t.push(k(n));e.resolve(t)}}function I(t){if("ready"!==p)throw new Error("apply() is only allowed in ready status");var n,o,i,c,d;function l(e){for(var t=[e],n={},o=t.slice().map(function(e){return{chain:[e],id:e}});o.length>0;){var a=o.pop(),i=a.id,s=a.chain;if((c=D[i])&&!c.hot._selfAccepted){if(c.hot._selfDeclined)return{type:"self-declined",chain:s,moduleId:i};if(c.hot._main)return{type:"unaccepted",chain:s,moduleId:i};for(var r=0;r<c.parents.length;r++){var d=c.parents[r],l=D[d];if(l){if(l.hot._declinedDependencies[i])return{type:"declined",chain:s.concat([d]),moduleId:i,parentId:d};-1===t.indexOf(d)&&(l.hot._acceptedDependencies[i]?(n[d]||(n[d]=[]),f(n[d],[i])):(delete n[d],t.push(d),o.push({chain:s.concat([d]),id:d})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function f(e,t){for(var n=0;n<t.length;n++){var o=t[n];-1===e.indexOf(o)&&e.push(o)}}t=t||{};var h={},v=[],w={},y=function(){console.warn("[HMR] unexpected require("+j.moduleId+") to disposed module")};for(var x in m)if(Object.prototype.hasOwnProperty.call(m,x)){var j;d=k(x);var C=!1,I=!1,O=!1,P="";switch((j=m[x]?l(d):{type:"disposed",moduleId:x}).chain&&(P="\nUpdate propagation: "+j.chain.join(" -> ")),j.type){case"self-declined":t.onDeclined&&t.onDeclined(j),t.ignoreDeclined||(C=new Error("Aborted because of self decline: "+j.moduleId+P));break;case"declined":t.onDeclined&&t.onDeclined(j),t.ignoreDeclined||(C=new Error("Aborted because of declined dependency: "+j.moduleId+" in "+j.parentId+P));break;case"unaccepted":t.onUnaccepted&&t.onUnaccepted(j),t.ignoreUnaccepted||(C=new Error("Aborted because "+d+" is not accepted"+P));break;case"accepted":t.onAccepted&&t.onAccepted(j),I=!0;break;case"disposed":t.onDisposed&&t.onDisposed(j),O=!0;break;default:throw new Error("Unexception type "+j.type)}if(C)return u("abort"),Promise.reject(C);if(I)for(d in w[d]=m[d],f(v,j.outdatedModules),j.outdatedDependencies)Object.prototype.hasOwnProperty.call(j.outdatedDependencies,d)&&(h[d]||(h[d]=[]),f(h[d],j.outdatedDependencies[d]));O&&(f(v,[j.moduleId]),w[d]=y)}var S,_=[];for(o=0;o<v.length;o++)d=v[o],D[d]&&D[d].hot._selfAccepted&&_.push({module:d,errorHandler:D[d].hot._selfAccepted});u("dispose"),Object.keys(b).forEach(function(e){!1===b[e]&&function(e){delete installedChunks[e]}(e)});for(var E,T,L=v.slice();L.length>0;)if(d=L.pop(),c=D[d]){var H={},M=c.hot._disposeHandlers;for(i=0;i<M.length;i++)(n=M[i])(H);for(s[d]=H,c.hot.active=!1,delete D[d],delete h[d],i=0;i<c.children.length;i++){var A=D[c.children[i]];A&&((S=A.parents.indexOf(d))>=0&&A.parents.splice(S,1))}}for(d in h)if(Object.prototype.hasOwnProperty.call(h,d)&&(c=D[d]))for(T=h[d],i=0;i<T.length;i++)E=T[i],(S=c.children.indexOf(E))>=0&&c.children.splice(S,1);for(d in u("apply"),a=g,w)Object.prototype.hasOwnProperty.call(w,d)&&(e[d]=w[d]);var U=null;for(d in h)if(Object.prototype.hasOwnProperty.call(h,d)&&(c=D[d])){T=h[d];var q=[];for(o=0;o<T.length;o++)if(E=T[o],n=c.hot._acceptedDependencies[E]){if(-1!==q.indexOf(n))continue;q.push(n)}for(o=0;o<q.length;o++){n=q[o];try{n(T)}catch(e){t.onErrored&&t.onErrored({type:"accept-errored",moduleId:d,dependencyId:T[o],error:e}),t.ignoreErrored||U||(U=e)}}}for(o=0;o<_.length;o++){var N=_[o];d=N.module,r=[d];try{$(d)}catch(e){if("function"==typeof N.errorHandler)try{N.errorHandler(e)}catch(n){t.onErrored&&t.onErrored({type:"self-accept-error-handler-errored",moduleId:d,error:n,originalError:e}),t.ignoreErrored||U||(U=n),U||(U=e)}else t.onErrored&&t.onErrored({type:"self-accept-errored",moduleId:d,error:e}),t.ignoreErrored||U||(U=e)}}return U?(u("fail"),Promise.reject(U)):(u("idle"),new Promise(function(e){e(v)}))}var D={};function $(t){if(D[t])return D[t].exports;var o=D[t]={i:t,l:!1,exports:{},hot:function(e){var t={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:n!==e,active:!0,accept:function(e,n){if(void 0===e)t._selfAccepted=!0;else if("function"==typeof e)t._selfAccepted=e;else if("object"==typeof e)for(var o=0;o<e.length;o++)t._acceptedDependencies[e[o]]=n||function(){};else t._acceptedDependencies[e]=n||function(){}},decline:function(e){if(void 0===e)t._selfDeclined=!0;else if("object"==typeof e)for(var n=0;n<e.length;n++)t._declinedDependencies[e[n]]=!0;else t._declinedDependencies[e]=!0},dispose:function(e){t._disposeHandlers.push(e)},addDisposeHandler:function(e){t._disposeHandlers.push(e)},removeDisposeHandler:function(e){var n=t._disposeHandlers.indexOf(e);n>=0&&t._disposeHandlers.splice(n,1)},check:x,apply:I,status:function(e){if(!e)return p;l.push(e)},addStatusHandler:function(e){l.push(e)},removeStatusHandler:function(e){var t=l.indexOf(e);t>=0&&l.splice(t,1)},data:s[e]};return n=void 0,t}(t),parents:(c=r,r=[],c),children:[]};return e[t].call(o.exports,o,o.exports,d(t)),o.l=!0,o.exports}$.m=e,$.c=D,$.d=function(e,t,n){$.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},$.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},$.t=function(e,t){if(1&t&&(e=$(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if($.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)$.d(n,o,function(t){return e[t]}.bind(null,o));return n},$.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return $.d(t,"a",t),t},$.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},$.p="",$.h=function(){return a},d("./src/js/admin.js")($.s="./src/js/admin.js")}({"./src/css/admin.scss":function(e,t){},"./src/js/admin.js":function(e,t,n){"use strict";n.r(t);n("./src/css/admin.scss");const o={open(e){$("body").css("overflow","hidden").append(`<div id="dialog" class="dialog-mask">\n        <div class="content-layout">\n          <div class="dialog-title">${e.title}</div>\n          <div class="dialog-content"  style="width:${e.contentArea[0]||"400px"}; height:${e.contentArea[1]||"auto"}; overflow: auto">\n            ${e.contentText}\n          </div>\n          <div class="dialog-footer">\n            <button class="dialog-cancel">${e.cancelText||"取消"}</button>\n            <button class="dialog-ok">${e.okText||"确定"}</button>\n          </div>\n        </div>\n      </div>`),this.onClick(e)},onClick(e){$("#dialog").on("click",t=>{const n=$(t.target);n.hasClass("dialog-ok")?this.onOk(e):n.hasClass("dialog-cancel")?this.onCancel(e):n.hasClass("dialog-mask")&&e.maskClose&&this.close()})},onOk(e){e.onOk&&e.onOk()},onCancel(e){e.onCancel&&e.onCancel(),$("body").css("overflow","auto").find("#dialog").remove()},close(){console.log("close"),$("body").css("overflow","auto").find("#dialog").remove()}},a={success(e){$("body").append(`<div class="toast toast-success"><p>${e}</p></div>`),$(".toast").addClass("toast-animate"),setTimeout(()=>{$(".toast").remove()},1e3)},error(e){$("body").append(`<div class="toast toast-error"><p>${e}</p></div>`),$(".toast").addClass("toast-animate"),setTimeout(()=>{$(".toast").remove()},1e3)},warning(e){$("body").append(`<div class="toast toast-warning"><p>${e}</p></div>`),$(".toast").addClass("toast-animate"),setTimeout(()=>{$(".toast").remove()},1e3)}};!function(e,t){t(function(){new class{constructor(){this.currentPage=1,this.totalCount=null,this.isList=1===t("#listPage").length,this.pageId=0,this.config={},this.corpId=window.location.pathname.split("/")[2],this.init()}async init(){await t.get("/admin/api/getConfig",e=>{0===e.ret?(e.data.mode,this.config=e.data,this.handleDataBackFill(e.data)):a.error("网络错误，获取业务模式失败")}),console.log("init"),this.bindEvents(),this.previePic(),this.modeSeting(),this.slideEvents(),this.uploadImage(),this.isList?(this.getList(),this.deleteItem(),this.changeLikeCount(),this.downloadAll()):(this.wangEditor(),this.handleSystemConfig())}bindEvents(){const e=this;t(".j-handle-event").click(e=>{const n=t(e.target).closest(".nav-item"),o=n.find("ul.options");o.hasClass("show")?o.slideUp().removeClass("show"):(n.siblings().find("ul.options").slideUp().removeClass("show"),o.slideDown().addClass("show"))}),e.isList?t("#filedata").UploadImg({url:"/admin/api/media/upload",width:"750",showTips:a,multiple:this.isList,quality:"0.8",corpId:e.corpId,mixsize:3145728,videoSize:52428800,videoType:"video/ogg,video/mp4,video/WebM,video/quicktime,video/x-msvideo",type:"image/png,image/jpg,image/jpeg,image/pjpeg,image/gif,image/bmp,image/x-png",sendBefore:e=>{"0"===e.current&&a.success("开始上传")},success:(e,t)=>{t&&t.all-1===t.current&&a.success("上传完成")},error:(e,t)=>{console.log(e,t),t&&a.error(`第${t.current}文件上传出错`)}}):t("#filedata").UploadImg({url:"/admin/api/uploadPicture",width:"750",showTips:a,multiple:this.isList,quality:"0.8",mixsize:3145728,videoSize:52428800,videoType:"video/ogg,video/mp4,video/WebM,video/quicktime,video/x-msvideo",type:"image/png,image/jpg,image/jpeg,image/pjpeg,image/gif,image/bmp,image/x-png",sendBefore:()=>{},success:n=>{a.success("上传成功"),0===n.ret&&(1===e.pageId?t(".shareImg").html(`<img src=${n.data} alt="">`):2===e.pageId?t(".waterMarkImg").html(`<img src=${n.data} alt="">`):t(".banners").html(`<img src=${n.data} alt="">`))},error:e=>{a.error("上传出错")}})}getList(e={}){const n=this,o=/.(jpg|jpeg|png|gif|x-png|bmp|pjpeg)/,i=t(".content ul"),s={page:1,count:20,patten:1,...e};t.get("/admin/api/media/list",s,e=>{if(0===e.ret){const t=e.data.dataList;n.totalCount=e.data.totalCount,n.currentPage=s.page;const a=t.map(e=>o.test(e.path)?`\n              <li class="item" data-id="${e.id}">\n                <div class="img">\n                  <img src="${e.path}" alt="">\n                </div>\n                <div class="info">\n                  <p><span>类型：</span><span>图片</span></p>\n                  <p><span>上传时间：</span><span>2018-20-30</span></p>\n                  <p><span>点赞数：</span><span class="like-count">${e.voteNum}</span><a class="j-change-like">修改</a></p>\n                  <p class="handle">\n                    <a class="j-down down">下载</a>\n                    <a class="delete">删除</a>\n                  </p>\n                </div>\n              </li>`:`<li class="item" data-id="${e.id}">\n                <div class="img">\n                  <video \n                    x5-video-player-type="h5"\n                    x5-video-player-fullscreen="true"\n                    controls src="${e.path}"></video>\n                </div>\n                <div class="info">\n                  <p><span>类型：</span><span>视频</span></p>\n                  <p><span>上传时间：</span><span>2018-20-30</span></p>\n                  <p><span>点赞数：</span><span class="like-count">${e.voteNum}</span><a class="j-change-like">修改</a></p>\n                  <p class="handle">\n                    <a class="j-down down">下载</a>\n                    <a class="delete">删除</a>\n                  </p>\n                </div>\n              </li>`);i.html(a.join("")),window.scrollTo(0,0),n.pagination({current:n.currentPage,totalData:n.totalCount})}else a.error(e.msg||"网络错误，稍后重试")})}pagination(e){const n=this;t(".paginate").pagination({showData:20,current:e.current,totalData:e.totalData,jump:!0,isHide:!0,coping:!0,homePage:"首页",endPage:"末页",prevContent:"上页",nextContent:"下页",callback:function(e){const t={page:e.getCurrent(),count:20,patten:1};n.getList(t)}})}deleteItem(){const e=this;t(".content").on("click",".delete",n=>{const i=t(n.target).closest(".item").data("id");o.open({contentArea:["280px"],title:"确认删除",contentText:"确认要删除该项吗？",maskClose:1,onOk(){t.post(`/admin/api/media/${i}/delete`,t=>{if(0===t.ret){const t={count:20,page:this.currentPage,patten:1};e.getList(t),o.close(),a.success("删除成功")}else a.error(t&&t.msg||"网络错误，稍后重试")})},onCancel(){}})})}previePic(){t(".content").on("click","img",e=>{const n=t(e.target).attr("src");t("body").append(`<div class="mask">\n        <img src="${n}"/>\n        </div>`)}),t("body").on("click",".mask",function(){t(this).remove()})}modeSeting(){const e=this;t(".modle-seting ul.options").on("click",".j-mode-item",n=>{const i=t(n.target).closest("li"),s=i.data("mode"),r=i.text();s!==e.config.mode&&o.open({title:"确认修改模式",contentArea:["280px"],maskClose:!0,contentText:`确认将模式修改为【${r}】模式?`,onOk(){t.post("/admin/api/updateConfig",{...e.config,mode:s},t=>{0===t.ret?(o.close(),i.find("a").addClass("active"),i.siblings().find("a").removeClass("active"),e.config.mode=s,a.success("模式修改成功"),e.isList&&e.getList()):a.error(t.msg||"网络错误，请稍后重试")})},onCancel(){i.closest("ul.options").slideToggle(),i.closest("ul.options").toggleClass("show")}})})}slideEvents(){const e=t(".photo-slide"),n=t(".photo-slide .level-2 li");e.on("click",".level-2 li a",e=>{const o=t(e.target).closest("li");n.removeClass("active"),o.addClass("active");const a=o.data("page");t(`.set-${a}`).show().siblings(".set-page").hide()})}uploadImage(){const e=this;t(".btn-upload").on("click",n=>{if(n.preventDefault(),e.isList)t("#filedata").trigger("click");else{const o=t(n.target).closest(".set-page").data("pageid");e.pageId=o,t("#filedata").trigger("click")}})}downloadAll(){this.config.corpId,t(".btn-download").click(()=>{const e=Array.from(t(".list .item")).map(e=>t(e).data("id")).join(",");t("#downLoadSource").attr("src",`/admin/api/downloadMedias?mediaIds=${e}`)}),t(".content").on("click",".j-down",e=>{const n=t(e.target).closest(".item").data("id");t("#downLoadSource").attr("src",`/admin/api/downloadMedias?mediaIds=${n}`)})}wangEditor(){const t=e.wangEditor;this.editor=new t("#editor"),this.editor.customConfig={menus:["head","bold","image"],uploadImgServer:"/admin/api/uploadPicture",eshowLinkImg:!1,uploadImgMaxLength:this.isList?9:null,uploadFileName:"picture",uploadImgMaxSize:3145728,uploadImgHooks:{customInsert:(e,t,n)=>{e(t.data)}}},this.editor.create(),this.editor.txt.html(this.config.accountDesc)}changeLikeCount(){const e=this;t(".list-container").on("click",".j-change-like",n=>{const i=t(n.target).closest(".item"),s=i.data("id");o.open({contentArea:["280px"],title:"修改点赞数",contentText:'<input type="number" name="likeCount" class="form-control">',maskClose:!1,onOk(){const n=t('input[name="likeCount"]').val().trim();n?+n?(console.log(s),t.post("/admin/api/modifyVoteNum",{mediaId:s,corpId:e.corpId,count:parseInt(n)},e=>{0===e.ret?(a.success("修改成功"),i.find(".like-count").text(n),o.close()):a.error(e&&e.msg||"网络错误，稍后重试")})):a.warning("点赞数应该为数字"):a.warning("点赞数量不能为空")},onCancel(){}})})}handleSystemConfig(){const e=this;t(".j-save-config").click(n=>{n.preventDefault();const o=t(n.target).closest(".set-page");console.log(o);const i=o.data("pageid");console.log(i);let s={};if(1===i){const e=o.find("#wxShareDesc").val().trim(),t=o.find('input[name="wxShareTitle"]').val().trim(),n=o.find(".shareImg img").attr("src");e||a.error("请填写分享描述"),t||a.error("请填写分享标题"),n||a.error("请上传分享图片"),s={...s,wxShareDesc:e,wxShareTitle:t,wxSharePic:n}}else if(2===i){const e=parseInt(o.find('input[type="radio"]:checked').val()),t=o.find(".waterMarkImg img").attr("src");if(!t)return void a.error("请上传水印图片");s={...s,enableWatermark:e,watermarkPic:t}}else{const t=e.editor.txt.html(),n=o.find(".banners img").attr("src");t||a.error("请填写网址介绍信息"),n||a.error("请上传轮播图图片"),s={...s,accountDesc:t,banners:n}}console.log(e.config),s={...e.config,...s},console.log(s),t.post("/admin/api/updateConfig",s,e=>{console.log(e),0===e.ret?a.success("更新成功"):a.error(e.msg||"网络错无情稍后重试")})})}handleDataBackFill(e){if(e.mode?t(`.options li[data-mode="${e.mode}"]`).find("a").addClass("active"):t('.options li[data-mode="1"]').find("a").addClass("active"),e.wxShareDesc&&t('input[name="wxShareDesc"]').val(e.wxShareDesc),e.wxShareTitle&&t('input[name="wxShareTitle"]').val(e.wxShareTitle),1===e.enableWatermark?t('input[name="enableWatermark"][value="1"]').prop("checked",!0):t('input[name="enableWatermark"][value="0"]').prop("checked",!0),e.wxShareDesc&&t('textarea[name="wxShareDesc"]').val(e.wxShareDesc),e.wxSharePic&&t(".set-wx_share .shareImg").html(`<img src="${e.wxSharePic}"/>`),e.banners){console.log(e.banners);const n=[e.banners].map(e=>`<img src="${e}"/>`);console.log(n),console.log(t(".set-account .banners")),t(".set-account .banners").html(n.join(""))}e.watermarkPic&&t(".set-watermark .waterMarkImg").html(`<img src="${e.watermarkPic}"/>`),e.accountDesc&&this.editor&&this.editor.txt.html(e.accountDesc)}}})}(window,$)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,